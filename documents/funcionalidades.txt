Implementadas:
    1. Variables
    2. Operaciones con variables
    3. Precedencia de operaciones y ()
    4. Funciones estáticas trigonométricas y exponenciales
    5. Constantes predefinidas E y PI sin poder reasignar
    6. clear() elimina todas y clear(var) elimina var
    7. workspace() muestra las variables guardadas
    8. solo se almacenan en el workspace las variables definidas correctamente
    9. quit() cierra el intérprete
    10. help(), help, ?, ?() o ? COMANDO
    11. echo on/off en sentencias de asignacion
    12. load desde fichero
    13. (error sintáctico no termina el programa)
    14. funciones con un array de argumentos (max, min, media, var, sum, prod, argmin, argmax)
        NOTA: los índices devueltos empiezan en 0
    15. las funciones se pueden usar como partes de expresiones
    16. clear de la pantalla (probar por terminal)
    17. ANS para último resultado (impreso)
    18. script con loads recursivos, con una pila
    19. sentencias de verdad (<, >, <=, >=, ==, !=), con tolerancia de 1.e-6 consultable como constante TOL.
    20. import de libreria dinamica, para funciones sin argumentos, 1 argumento double, o 1 array que termina en NAN,
        devolviendo un double.


A implementar:
    - liberar toda la memoria usada
    - makefile
    - comentar

No se va a hacer (demasiado trabajo):
    - definir funciones en el lenguaje
    - history de comandos y desplazarse
    - bucles y condicionales